{
	"info": {
		"_postman_id": "39af2295-f420-4232-9744-19af6ef1f237",
		"name": "Reqres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9930613"
	},
	"item": [
		{
			"name": "Base URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"page\")",
							"    pm.expect(pm.response.text()).to.include(\"per_page\")",
							"    pm.expect(pm.response.text()).to.include(\"total\")",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\")",
							"});",
							"",
							"",
							"// Validate that the list of users is not empty",
							"pm.test(\"The list of users is not empty\", function () {",
							"    const responseData = pm.response.json();",
							"    const users = responseData.data;",
							"   ",
							"    pm.expect(users.length).to.be.greaterThan(0, \"The list of users should not be empty\");",
							"});",
							"",
							"",
							"// Checking response time is less than 200ms",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"page\")",
							"    pm.expect(pm.response.text()).to.include(\"per_page\")",
							"    pm.expect(pm.response.text()).to.include(\"total\")",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\")",
							"});",
							"",
							"",
							"// Validate that the list of users is empty",
							"pm.test(\"The list of users is empty\", function () {",
							"    const responseData = pm.response.json();",
							"    const users = responseData.data;",
							"   ",
							"    pm.expect(users.length).to.be.equal(0, \"The list of users should be empty\");",
							"});",
							"",
							"",
							"// Checking response time is less than 200ms",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=1000",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"page\")",
							"    pm.expect(pm.response.text()).to.include(\"per_page\")",
							"    pm.expect(pm.response.text()).to.include(\"total\")",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\")",
							"});",
							"",
							"",
							"// Validate that the list of users is not empty",
							"pm.test(\"The list of users is not empty\", function () {",
							"    const responseData = pm.response.json();",
							"    const users = responseData.data;",
							"   ",
							"    pm.expect(users.length).to.be.greaterThan(0, \"The list of users should not be empty\");",
							"});",
							"",
							"",
							"// Checking response time is less than 200ms",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page={{$id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{$id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User - Postive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"data\")",
							"    pm.expect(pm.response.text()).to.include(\"id\")",
							"    pm.expect(pm.response.text()).to.include(\"email\")",
							"    pm.expect(pm.response.text()).to.include(\"first_name\")",
							"    pm.expect(pm.response.text()).to.include(\"last_name\")",
							"    pm.expect(pm.response.text()).to.include(\"avatar\")",
							"",
							"});",
							"",
							"",
							"// Checking response time is less than 200ms",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/1089",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"1089"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/0",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"// Checking the body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"leader\");",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking response has required fields",
							"pm.test(\"Response has the required fields - name, job, id, and createdAt\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('name');",
							"    pm.expect(responseData).to.have.property('job');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('createdAt');",
							"});",
							"",
							"",
							"// Checking name and job are non-empty strings",
							"pm.test(\"Name and job are non-empty strings\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
							"    pm.expect(responseData.job).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Job should not be empty\");",
							"});",
							"",
							"",
							"// Checking ID is a non-empty string",
							"pm.test(\"ID is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomUserName}}\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"// Checking the body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"\");",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"a\"*12340,\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"leader\");",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"name\")",
							"    pm.expect(pm.response.text()).to.include(\"job\")",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\")",
							"",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"400 Bad Request\");",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/%^hs",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"%^hs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Error\");",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"a\"*1000\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/120",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"120"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"leader\");",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"name\")",
							"    pm.expect(pm.response.text()).to.include(\"job\")",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\")",
							"",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"400 Bad Request\");",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/%^hs",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"%^hs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Error\");",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"a\"*1000\",\n    \"job\": \"leader\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/120",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"120"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/22",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"22"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/1239012",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"1239012"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"400 Bad Request\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/%^&*",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"%^&*"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"id\")",
							"    pm.expect(pm.response.text()).to.include(\"token\")",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\": \"{{$randomUserName}}@reqres.in\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Note: Only defined users succeed registration\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\": \"{{$randomUserName}}@reqres.in\",\n    \"password\": \"{{$randomPassword}}\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking response keys",
							"pm.test(\"Checking response keys\", function () { ",
							"    pm.expect(pm.response.text()).to.include(\"token\")",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"cityslicka\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Missing password\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\": \"{{$randomUserName}}@reqres.in\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Edge Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Checking status code",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"// Checking response time is less than 300ms",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"",
							"// Checking body matches string",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"user not found\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{   \n    \"email\": \"{{$randomUserName}}@reqres.in\",\n    \"password\": \"{{$randomPassword}}\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id",
			"value": ""
		}
	]
}